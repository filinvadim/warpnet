/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

package telemetry // import "go.opentelemetry.io/otel/trace/internal/telemetry"

// For the semantics of status codes see
// https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#set-status
type StatusCode int32

const (
	// The default status.
	StatusCodeUnset StatusCode = 0
	// The Span has been validated by an Application developer or Operator to
	// have completed successfully.
	StatusCodeOK StatusCode = 1
	// The Span contains an error.
	StatusCodeError StatusCode = 2
)

var statusCodeStrings = []string{
	"Unset",
	"OK",
	"Error",
}

func (s StatusCode) String() string {
	if s >= 0 && int(s) < len(statusCodeStrings) {
		return statusCodeStrings[s]
	}
	return "<unknown telemetry.StatusCode>"
}

// The Status type defines a logical error model that is suitable for different
// programming environments, including REST APIs and RPC APIs.
type Status struct {
	// A developer-facing human readable error message.
	Message string `json:"message,omitempty"`
	// The status code.
	Code StatusCode `json:"code,omitempty"`
}
