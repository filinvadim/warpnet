/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

package watchdog

import "log"

// logger is an interface to be implemented by custom loggers.
type logger interface {
	Debugf(template string, args ...interface{})
	Infof(template string, args ...interface{})
	Warnf(template string, args ...interface{})
	Errorf(template string, args ...interface{})
}

var _ logger = (*stdlog)(nil)

// stdlog is a logger that proxies to a standard log.logger.
type stdlog struct {
	log   *log.Logger
	debug bool
}

func (s *stdlog) Debugf(template string, args ...interface{}) {
	if !s.debug {
		return
	}
	s.log.Printf(template, args...)
}

func (s *stdlog) Infof(template string, args ...interface{}) {
	s.log.Printf(template, args...)
}

func (s *stdlog) Warnf(template string, args ...interface{}) {
	s.log.Printf(template, args...)
}

func (s *stdlog) Errorf(template string, args ...interface{}) {
	s.log.Printf(template, args...)
}
