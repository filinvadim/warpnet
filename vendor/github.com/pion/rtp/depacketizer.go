/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

// SPDX-FileCopyrightText: 2023 The Pion community <https://pion.ly>
// SPDX-License-Identifier: MIT

package rtp

// Depacketizer depacketizes a RTP payload, removing any RTP specific data from the payload.
type Depacketizer interface {
	// Unmarshal parses the RTP payload and returns media.
	// Metadata may be stored on the Depacketizer itself
	Unmarshal(packet []byte) ([]byte, error)

	// Checks if the packet is at the beginning of a partition.  This
	// should return false if the result could not be determined, in
	// which case the caller will detect timestamp discontinuities.
	IsPartitionHead(payload []byte) bool

	// Checks if the packet is at the end of a partition.  This should
	// return false if the result could not be determined.
	IsPartitionTail(marker bool, payload []byte) bool
}
