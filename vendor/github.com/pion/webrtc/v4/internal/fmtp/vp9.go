/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

// SPDX-FileCopyrightText: 2023 The Pion community <https://pion.ly>
// SPDX-License-Identifier: MIT

package fmtp

type vp9FMTP struct {
	parameters map[string]string
}

func (h *vp9FMTP) MimeType() string {
	return "video/vp9"
}

func (h *vp9FMTP) Match(b FMTP) bool {
	c, ok := b.(*vp9FMTP)
	if !ok {
		return false
	}

	// RTP Payload Format for VP9 Video - draft-ietf-payload-vp9-16
	// https://datatracker.ietf.org/doc/html/draft-ietf-payload-vp9-16
	// If no profile-id is present, Profile 0 MUST be inferred
	hProfileID, ok := h.parameters["profile-id"]
	if !ok {
		hProfileID = "0"
	}
	cProfileID, ok := c.parameters["profile-id"]
	if !ok {
		cProfileID = "0"
	}
	if hProfileID != cProfileID {
		return false
	}

	return true
}

func (h *vp9FMTP) Parameter(key string) (string, bool) {
	v, ok := h.parameters[key]

	return v, ok
}
