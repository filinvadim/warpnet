/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

//go:build !darwin || !arm64 || !cgo

package m1cpu

// IsAppleSilicon return false on this platform.
func IsAppleSilicon() bool {
	return false
}

// PCoreHZ requires darwin/arm64
func PCoreHz() uint64 {
	panic("m1cpu: not a darwin/arm64 system")
}

// ECoreHZ requires darwin/arm64
func ECoreHz() uint64 {
	panic("m1cpu: not a darwin/arm64 system")
}

// PCoreGHz requires darwin/arm64
func PCoreGHz() float64 {
	panic("m1cpu: not a darwin/arm64 system")
}

// ECoreGHz requires darwin/arm64
func ECoreGHz() float64 {
	panic("m1cpu: not a darwin/arm64 system")
}

// PCoreCount requires darwin/arm64
func PCoreCount() int {
	panic("m1cpu: not a darwin/arm64 system")
}

// ECoreCount requires darwin/arm64
func ECoreCount() int {
	panic("m1cpu: not a darwin/arm64 system")
}

// PCoreCacheSize requires darwin/arm64
func PCoreCache() (int, int, int) {
	panic("m1cpu: not a darwin/arm64 system")
}

// ECoreCacheSize requires darwin/arm64
func ECoreCache() (int, int, int) {
	panic("m1cpu: not a darwin/arm64 system")
}

// ModelName requires darwin/arm64
func ModelName() string {
	panic("m1cpu: not a darwin/arm64 system")
}
