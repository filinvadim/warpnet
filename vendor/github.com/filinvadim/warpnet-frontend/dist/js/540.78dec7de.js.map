{"version":3,"file":"js/540.78dec7de.js","mappings":"0MACOA,MAAM,oD,GACJA,MAAM,0D,GAMRA,MAAM,yB,0CAPXC,EAAAA,EAAAA,IAQM,MARNC,EAQM,EAPJC,EAAAA,EAAAA,IAKM,MALNC,EAKM,EAJJD,EAAAA,EAAAA,IAGO,OAFHH,MAAM,yDACLK,OALXC,EAAAA,EAAAA,IAAA,CAAAC,MAK2BC,EAAAC,SAAW,O,WAGlCN,EAAAA,EAAAA,IAAoD,IAApDO,GAAoDC,EAAAA,EAAAA,IAAhBH,EAAAC,UAAW,IAAC,I,CAIlD,OACEG,KAAM,uBACNC,MAAO,CAAC,aACRC,IAAAA,GACE,MAAO,CACLC,WAAW,EACXN,SAAU,EACVO,WAAY,KAEhB,EACAC,OAAAA,GACEC,KAAKC,eACP,EACAC,SAAAA,GACEF,KAAKH,WAAY,EACjBM,cAAcH,KAAKF,WACrB,EACAM,QAAS,CACPH,aAAAA,GACE,MAAMI,EAAY,KACZC,EAAW,IACXC,EAAQF,EAAYC,EACpBE,EAAY,IAAMD,EAExBP,KAAKF,WAAaW,aAAY,KACxBT,KAAKT,UAAY,IACnBY,cAAcH,KAAKF,YAGrBE,KAAKT,SAAWmB,KAAKC,IAAI,IAAKD,KAAKE,MAAMZ,KAAKT,SAAWiB,GAAW,GACnEF,EACL,I,UCtCN,MAAMO,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://warpnet-frontend/./src/components/ProgressBar.vue","webpack://warpnet-frontend/./src/components/ProgressBar.vue?6a3a"],"sourcesContent":["<template>\n  <div class=\"flex flex-col items-center justify-center w-full\">\n    <div class=\"w-64 h-4 bg-gray-200 rounded-full overflow-hidden mb-2\">\n      <div\n          class=\"h-full bg-blue transition-all duration-100 ease-linear\"\n          :style=\"{ width: progress + '%' }\"\n      ></div>\n    </div>\n    <p class=\"text-sm text-gray-600\">{{ progress }}%</p>\n  </div>\n</template>\n<script>\n  export default {\n    name: \"ProgressBarComponent\",\n    emits: [\"completed\"],\n    data() {\n      return {\n        isLoading: false,\n        progress: 0,\n        intervalId: null,\n      };\n    },\n    mounted() {\n      this.startProgress();\n    },\n    unmounted() {\n      this.isLoading = false;\n      clearInterval(this.intervalId);\n    },\n    methods: {\n      startProgress() {\n        const totalTime = 25000; // TODO sync with backend\n        const stepTime = 500;\n        const steps = totalTime / stepTime;\n        const increment = 100 / steps;\n\n        this.intervalId = setInterval(() => {\n          if (this.progress >= 100) {\n            clearInterval(this.intervalId);\n            return;\n          }\n          this.progress = Math.min(100, Math.round(this.progress + increment));\n        }, stepTime);\n      },\n    },\n  };\n</script>","import { render } from \"./ProgressBar.vue?vue&type=template&id=844f9caa\"\nimport script from \"./ProgressBar.vue?vue&type=script&lang=js\"\nexport * from \"./ProgressBar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","style","_normalizeStyle","width","$data","progress","_hoisted_3","_toDisplayString","name","emits","data","isLoading","intervalId","mounted","this","startProgress","unmounted","clearInterval","methods","totalTime","stepTime","steps","increment","setInterval","Math","min","round","__exports__","render"],"sourceRoot":""}