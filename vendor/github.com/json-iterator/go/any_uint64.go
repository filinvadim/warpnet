/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

package jsoniter

import (
	"strconv"
)

type uint64Any struct {
	baseAny
	val uint64
}

func (any *uint64Any) LastError() error {
	return nil
}

func (any *uint64Any) ValueType() ValueType {
	return NumberValue
}

func (any *uint64Any) MustBeValid() Any {
	return any
}

func (any *uint64Any) ToBool() bool {
	return any.val != 0
}

func (any *uint64Any) ToInt() int {
	return int(any.val)
}

func (any *uint64Any) ToInt32() int32 {
	return int32(any.val)
}

func (any *uint64Any) ToInt64() int64 {
	return int64(any.val)
}

func (any *uint64Any) ToUint() uint {
	return uint(any.val)
}

func (any *uint64Any) ToUint32() uint32 {
	return uint32(any.val)
}

func (any *uint64Any) ToUint64() uint64 {
	return any.val
}

func (any *uint64Any) ToFloat32() float32 {
	return float32(any.val)
}

func (any *uint64Any) ToFloat64() float64 {
	return float64(any.val)
}

func (any *uint64Any) ToString() string {
	return strconv.FormatUint(any.val, 10)
}

func (any *uint64Any) WriteTo(stream *Stream) {
	stream.WriteUint64(any.val)
}

func (any *uint64Any) Parse() *Iterator {
	return nil
}

func (any *uint64Any) GetInterface() interface{} {
	return any.val
}
