/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

package multihash

import (
	"bytes"
	"crypto/sha256"
	"hash"
)

type identityMultihash struct {
	bytes.Buffer
}

func (identityMultihash) BlockSize() int {
	return 32 // A prefered block size is nonsense for the "identity" "hash".  An arbitrary but unsurprising and positive nonzero number has been chosen to minimize the odds of fascinating bugs.
}

func (x *identityMultihash) Size() int {
	return x.Len()
}

func (x *identityMultihash) Sum(digest []byte) []byte {
	return x.Bytes()
}

type doubleSha256 struct {
	hash.Hash
}

func (x doubleSha256) Sum(digest []byte) []byte {
	digest = x.Hash.Sum(digest)
	h2 := sha256.New()
	h2.Write(digest)
	return h2.Sum(digest[0:0])
}
