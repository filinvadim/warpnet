/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

package reflect2

import (
	"reflect"
	"unsafe"
)

// DefaultTypeOfKind return the non aliased default type for the kind
func DefaultTypeOfKind(kind reflect.Kind) Type {
	return kindTypes[kind]
}

var kindTypes = map[reflect.Kind]Type{
	reflect.Bool:          TypeOf(true),
	reflect.Uint8:         TypeOf(uint8(0)),
	reflect.Int8:          TypeOf(int8(0)),
	reflect.Uint16:        TypeOf(uint16(0)),
	reflect.Int16:         TypeOf(int16(0)),
	reflect.Uint32:        TypeOf(uint32(0)),
	reflect.Int32:         TypeOf(int32(0)),
	reflect.Uint64:        TypeOf(uint64(0)),
	reflect.Int64:         TypeOf(int64(0)),
	reflect.Uint:          TypeOf(uint(0)),
	reflect.Int:           TypeOf(int(0)),
	reflect.Float32:       TypeOf(float32(0)),
	reflect.Float64:       TypeOf(float64(0)),
	reflect.Uintptr:       TypeOf(uintptr(0)),
	reflect.String:        TypeOf(""),
	reflect.UnsafePointer: TypeOf(unsafe.Pointer(nil)),
}
