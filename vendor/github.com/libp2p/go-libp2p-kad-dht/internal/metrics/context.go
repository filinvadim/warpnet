/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

package metrics

import (
	"context"

	"go.opentelemetry.io/otel/attribute"
)

type attributeCtxKey struct{}

// ContextWithAttributes adds attribute.KeyValue to a given context.
// These can be later accessed via AttributesFromContext.
//
// Calling this again will overwrite the previous set attributes.
func ContextWithAttributes(ctx context.Context, kv ...attribute.KeyValue) context.Context {
	return context.WithValue(ctx, attributeCtxKey{}, attribute.NewSet(kv...))
}

// AttributesFromContext returns attribute.Set that was addded to ctx via ContextWithAttributes
func AttributesFromContext(ctx context.Context) attribute.Set {
	ctxVal, _ := ctx.Value(attributeCtxKey{}).(attribute.Set)
	return ctxVal
}
