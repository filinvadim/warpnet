/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

package pnet

// ErrNotInPrivateNetwork is an error that should be returned by libp2p when it
// tries to dial with ForcePrivateNetwork set and no PNet Protector
var ErrNotInPrivateNetwork = NewError("private network was not configured but" +
	" is enforced by the environment")

// Error is error type for ease of detecting PNet errors
type Error interface {
	IsPNetError() bool
}

// NewError creates new Error
func NewError(err string) error {
	return pnetErr("privnet: " + err)
}

// IsPNetError checks if given error is PNet Error
func IsPNetError(err error) bool {
	v, ok := err.(Error)
	return ok && v.IsPNetError()
}

type pnetErr string

var _ Error = (*pnetErr)(nil)

func (p pnetErr) Error() string {
	return string(p)
}

func (pnetErr) IsPNetError() bool {
	return true
}
