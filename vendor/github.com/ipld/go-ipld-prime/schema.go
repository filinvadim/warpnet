/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

package ipld

import (
	"bytes"
	"io"
	"os"

	"github.com/ipld/go-ipld-prime/schema"
	schemadmt "github.com/ipld/go-ipld-prime/schema/dmt"
	schemadsl "github.com/ipld/go-ipld-prime/schema/dsl"
)

// LoadSchemaBytes is a shortcut for LoadSchema for the common case where
// the schema is available as a buffer or a string, such as via go:embed.
func LoadSchemaBytes(src []byte) (*schema.TypeSystem, error) {
	return LoadSchema("", bytes.NewReader(src))
}

// LoadSchemaBytes is a shortcut for LoadSchema for the common case where
// the schema is a file on disk.
func LoadSchemaFile(path string) (*schema.TypeSystem, error) {
	f, err := os.Open(path)
	if err != nil {
		return nil, err
	}
	defer f.Close()
	return LoadSchema(path, f)
}

// LoadSchema parses an IPLD Schema in its DSL form
// and compiles its types into a standalone TypeSystem.
func LoadSchema(name string, r io.Reader) (*schema.TypeSystem, error) {
	sch, err := schemadsl.Parse(name, r)
	if err != nil {
		return nil, err
	}
	ts := new(schema.TypeSystem)
	ts.Init()
	if err := schemadmt.Compile(ts, sch); err != nil {
		return nil, err
	}
	return ts, nil
}
