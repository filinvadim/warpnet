/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

// Copyright 2016 Mikio Hara. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package tcpinfo

import "github.com/mikioh/tcpopt"

func init() {
	for _, o := range options {
		if o.name == 0 || o.parseFn == nil {
			continue
		}
		tcpopt.Register(o.level, o.name, o.parseFn)
	}
}

const (
	ianaProtocolTCP = 0x6
)

const (
	soInfo = iota
	soCCInfo
	soCCAlgo
	soMax
)

// An option represents a binding for socket option.
type option struct {
	level   int // option level
	name    int // option name, must be equal or greater than 1
	parseFn func([]byte) (tcpopt.Option, error)
}
