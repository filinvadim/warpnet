/* License generated by licensor(https://github.com/Marvin9/licensor).

 Warpnet - Decentralized Social Network
 Copyright (C) 2025 Vadim Filin, https://github.com/filinvadim,
 <github.com.mecdy@passmail.net>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

package path

import (
	"errors"
	"fmt"
)

var (
	ErrExpectedImmutable      = errors.New("path was expected to be immutable")
	ErrInsufficientComponents = errors.New("path does not have enough components")
	ErrUnknownNamespace       = errors.New("unknown namespace")
)

type ErrInvalidPath struct {
	err  error
	path string
}

func (e *ErrInvalidPath) Error() string {
	return fmt.Sprintf("invalid path %q: %s", e.path, e.err)
}

func (e *ErrInvalidPath) Unwrap() error {
	return e.err
}

func (e *ErrInvalidPath) Is(err error) bool {
	switch err.(type) {
	case *ErrInvalidPath:
		return true
	default:
		return false
	}
}
