openapi: 3.0.0
info:
  title: Warp Network
  version: 0.1.127
  description: Events for a distributed Twitter-like application

paths:
  /private/post/login/{version}:
    options:
      parameters:
        - in: path
          name: version
          schema:
            type: string
      description: NOTE! This is WS message identificator. Not a HTTP!
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
            example: |
              {
                message_id: "079a770a-a203-4d6b-9d45-4faa9274c1ca",
                node_id: "12D3KooWCyEYA3aXWpnTe9GZU6Bh3C6ScunVRxdP77UZ8X2W5FhE",
                path: "/private/post/login/1.0.0",
                timestamp: "2025-01-31T22:16:34.206155932+04:00",
                version: "0.1.63",
                body: {}
              }
      responses:
        "200":
          description: NOTE! This is WS response. Not a HTTP!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"

  /private/post/logout/{version}:
    options:
      parameters:
        - in: path
          name: version
          schema:
            type: string
      description: NOTE! This is WS message identificator. Not a HTTP!
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
            example: |
              {
                message_id: "079a770a-a203-4d6b-9d45-4faa9274c1ca",
                node_id: "12D3KooWCyEYA3aXWpnTe9GZU6Bh3C6ScunVRxdP77UZ8X2W5FhE",
                path: "/private/post/logout/1.0.0",
                timestamp: "2025-01-31T22:16:34.206155932+04:00",
                version: "0.1.63",
                body: {}
              }
      responses:
        "200":
          description: NOTE! This is WS response. Not a HTTP!

  /public/get/info/{version}:
    options:
      parameters:
        - in: path
          name: version
          schema:
            type: string
      description: NOTE! This is WS message identificator. Not a HTTP!
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
            example: |
              {
                message_id: "079a770a-a203-4d6b-9d45-4faa9274c1ca",
                node_id: "12D3KooWCyEYA3aXWpnTe9GZU6Bh3C6ScunVRxdP77UZ8X2W5FhE",
                path: "public/get/info/1.0.0",
                timestamp: "2025-01-31T22:16:34.206155932+04:00",
                version: "0.1.63",
                body: {}
              }
              
              ... et cetera...
      responses:
        "200":
          description: NOTE! This is WS response. Not a HTTP!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"

  /private/post/pair/{version}: {}
  /private/get/timeline/{version}: {}
  /private/post/tweet/{version}: {}
  /public/post/reply/{version}: {}
  /public/delete/reply/{version}: {}
  /private/delete/tweet/{version}: {}
  /public/post/follow/{version}: {}
  /public/post/unfollow/{version}: {}
  /private/post/user/{version}: {}
  /public/get/user/{version}: {}
  /public/get/users/{version}: {}
  /public/get/tweets/{version}: {}
  /public/get/tweet/{version}: {}
  /public/get/replies/{version}: {}
  /public/get/reply/{version}: {}
  /public/get/followers/{version}: {}
  /public/get/followees/{version}: {}
  /public/get/likers/{version}: {}
  /public/get/likescount/{version}: {}
  /public/post/like/{version}: {}
  /public/post/unlike/{version}: {}
  /public/get/retweetscount/{version}: {}
  /public/post/retweet/{version}: {}
  /public/post/unretweet/{version}: {}
  /public/get/retweeters/{version}: {}
  /public/post/message/{version}: {}
  /private/get/message/{version}: {}
  /private/delete/message/{version}: {}
  /private/get/messages/{version}: {}
  /public/post/chat/{version}: {}
  /private/delete/chat/{version}: {}
  /private/get/chats/{version}: {}

components:
  schemas:
    Message:
      type: object
      properties:
        version:
          type: string
        timestamp:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        message_id:
          type: string
        path:
          type: string
          example: /private/login/1.0.0
        node_id:
          type: string
        body:
          anyOf:
            - $ref: '#/components/schemas/RequestBody'
            - $ref: '#/components/schemas/ResponseBody'
      required:
        - message_id
        - node_id
        - path
        - version

    RequestBody:
      anyOf:
        - $ref: '#/components/schemas/ErrorEvent'
        - $ref: '#/components/schemas/NewTweetEvent'
        - $ref: '#/components/schemas/NewUserEvent'
        - $ref: '#/components/schemas/DeleteTweetEvent'
        - $ref: '#/components/schemas/DeleteReplyEvent'
        - $ref: '#/components/schemas/NewFollowEvent'
        - $ref: '#/components/schemas/NewUnfollowEvent'
        - $ref: '#/components/schemas/GetAllTweetsEvent'
        - $ref: '#/components/schemas/GetTimelineEvent'
        - $ref: '#/components/schemas/GetTweetEvent'
        - $ref: '#/components/schemas/GetUserEvent'
        - $ref: '#/components/schemas/GetAllUsersEvent'
        - $ref: '#/components/schemas/GetAllRepliesEvent'
        - $ref: '#/components/schemas/NewReplyEvent'
        - $ref: '#/components/schemas/GetReplyEvent'
        - $ref: '#/components/schemas/LoginEvent'
        - $ref: '#/components/schemas/LogoutEvent'
        - $ref: '#/components/schemas/LikeEvent'
        - $ref: '#/components/schemas/UnlikeEvent'
        - $ref: '#/components/schemas/GetLikesCountEvent'
        - $ref: '#/components/schemas/GetLikersEvent'
        - $ref: '#/components/schemas/GetRetweetersEvent'
        - $ref: '#/components/schemas/NewRetweetEvent'
        - $ref: '#/components/schemas/GetReTweetsCountEvent'
        - $ref: '#/components/schemas/UnretweetEvent'
        - $ref: '#/components/schemas/NewChatEvent'
        - $ref: '#/components/schemas/DeleteChatEvent'
        - $ref: '#/components/schemas/GetAllChatsEvent'
        - $ref: '#/components/schemas/GetAllMessagesEvent'
        - $ref: '#/components/schemas/GetMessageEvent'
        - $ref: '#/components/schemas/DeleteMessageEvent'
        - $ref: '#/components/schemas/NewMessageEvent'

    ResponseBody:
      anyOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - $ref: '#/components/schemas/LoginResponse'
        - $ref: '#/components/schemas/UsersResponse'
        - $ref: '#/components/schemas/TweetsResponse'
        - $ref: '#/components/schemas/ChatsResponse'
        - $ref: '#/components/schemas/ChatMessagesResponse'
        - $ref: '#/components/schemas/RepliesTreeResponse'
        - $ref: '#/components/schemas/FolloweesResponse'
        - $ref: '#/components/schemas/FollowersResponse'
        - $ref: '#/components/schemas/NewReplyResponse'
        - $ref: '#/components/schemas/LikesCountResponse'
        - $ref: '#/components/schemas/GetLikersResponse'
        - $ref: '#/components/schemas/GetRetweetersResponse'
        - $ref: '#/components/schemas/AcceptedResponse'
        - $ref: '#/components/schemas/ChatCreatedResponse'
        - $ref: '#/components/schemas/ChatMessageResponse'
        - $ref: '#/components/schemas/NewMessageResponse'

    AcceptedResponse:
      type: string
      enum: [Accepted]

    NewReplyResponse:
      $ref: './domain.yml#/components/schemas/Tweet'

    LoginResponse:
      type: object
      properties:
        token:
          type: string
        owner:
          $ref: '#/components/schemas/Owner'
      required:
        - token
        - owner

    ReTweetsCountResponse:
      $ref: '#/components/schemas/LikesCountResponse'

    LikesCountResponse:
      properties:
        count:
          type: integer
          x-go-type: uint64
      required:
        - count

    ErrorResponse:
      properties:
        code:
          type: integer
        message:
          type: string
      required:
        - code
        - message

    NewMessageEvent:
      $ref: './domain.yml#/components/schemas/ChatMessage'

    NewMessageResponse:
      $ref: './domain.yml#/components/schemas/ChatMessage'

    DeleteMessageEvent:
      $ref: '#/components/schemas/GetMessageEvent'

    GetMessageEvent:
      type: object
      properties:
        user_id:
          type: string
        id:
          type: string
        chat_id:
          type: string
      required:
        - user_id
        - chat_id
        - id

    GetAllMessagesEvent:
      type: object
      properties:
        owner_id:
          type: string
        chat_id:
          type: string
        limit:
          type: integer
          x-go-type: uint64
        cursor:
          type: string
      required:
        - chat_id
        - owner_id

    NewReplyEvent:
      $ref: './domain.yml#/components/schemas/Tweet'

    GetReplyEvent:
      type: object
      properties:
        user_id:
          type: string
        root_id:
          type: string
        reply_id:
          type: string
      required:
        - root_id
        - reply_id
        - user_id

    DeleteReplyEvent:
      $ref: '#/components/schemas/GetReplyEvent'

    GetAllRepliesEvent:
      type: object
      properties:
        parent_id:
          type: string
        root_id:
          type: string
        limit:
          type: integer
          x-go-type: uint64
        cursor:
          type: string
      required:
        - root_id
        - parent_id

    NewRetweetEvent:
      $ref: './domain.yml#/components/schemas/Tweet'

    GetRetweetersEvent:
      $ref: '#/components/schemas/GetLikersEvent'

    NewTweetEvent:
      $ref: './domain.yml#/components/schemas/Tweet'

    GetTweetEvent:
      type: object
      properties:
        user_id:
          type: string
        tweetId:
          type: string
      required:
        - user_id
        - tweetId

    DeleteTweetEvent:
      $ref: '#/components/schemas/GetTweetEvent'

    GetAllTweetsEvent:
      type: object
      properties:
        user_id:
          type: string
        limit:
          type: integer
          x-go-type: uint64
        cursor:
          type: string
      required:
        - user_id

    GetTimelineEvent:
      $ref: '#/components/schemas/GetAllTweetsEvent'

    NewUserEvent:
      $ref: './domain.yml#/components/schemas/User'

    GetUserEvent:
      type: object
      properties:
        user_id:
          type: string

    LikeEvent:
      type: object
      properties:
        user_id:
          type: string
        tweet_id:
          type: string
      required:
        - user_id
        - tweet_id

    UnretweetEvent:
      $ref: '#/components/schemas/LikeEvent'

    UnlikeEvent:
      $ref: '#/components/schemas/LikeEvent'

    GetReTweetsCountEvent:
      $ref: '#/components/schemas/GetLikesCountEvent'

    GetLikesCountEvent:
      type: object
      properties:
        tweet_id:
          type: string
      required:
        - tweet_id

    GetLikersEvent:
      type: object
      properties:
        tweet_id:
          type: string
        limit:
          type: integer
          x-go-type: uint64
        cursor:
          type: string
      required:
        - tweet_id

    GetRetweetersResponse:
      $ref: '#/components/schemas/UsersResponse'

    GetLikersResponse:
      $ref: '#/components/schemas/UsersResponse'

    GetAllUsersEvent:
      type: object
      properties:
        user_id:
          type: string
          description: default owner
        limit:
          type: integer
          x-go-type: uint64
        cursor:
          type: string

    NewChatEvent:
      type: object
      properties:
        chat_id:
          type: string
        owner_id:
          type: string
          minLength: 1
        other_user_id:
          type: string
          minLength: 1
      required:
        - owner_id
        - other_user_id

    DeleteChatEvent:
      type: object
      properties:
        chat_id:
          type: string
      required:
        - chat_id

    ChatCreatedResponse:
      $ref: './domain.yml#/components/schemas/Chat'

    GetChatEvent:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        from_user_id:
          type: string
          minLength: 1
        to_user_id:
          type: string
          minLength: 1
      required:
        - from_user_id
        - to_user_id
        - created_at

    GetAllChatsEvent:
      type: object
      properties:
        user_id:
          type: string
        cursor:
          type: string
        limit:
          type: integer
          x-go-type: uint64
      required:
        - user_id

    NewFollowEvent:
      $ref: './domain.yml#/components/schemas/Following'

    NewUnfollowEvent:
      $ref: './domain.yml#/components/schemas/Following'

    GetFollowersEvent:
      type: object
      properties:
        user_id:
          type: string
        limit:
          type: integer
          x-go-type: uint64
        cursor:
          type: string
      required:
        - user_id

    GetFolloweesEvent:
      $ref: '#/components/schemas/GetFollowersEvent'

    FollowersResponse:
      type: object
      properties:
        followee:
          type: string
        cursor:
          type: string
        followers:
          type: array
          items:
            $ref: './domain.yml#/components/schemas/Following'
      required:
        - cursor
        - followers
        - followee

    FolloweesResponse:
      type: object
      properties:
        follower:
          type: string
        cursor:
          type: string
        followees:
          type: array
          items:
            $ref: './domain.yml#/components/schemas/Following'
      required:
        - cursor
        - followees
        - follower

    ErrorEvent:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      required:
        - code
        - message

    LoginEvent:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
      required:
        - username
        - password

    LogoutEvent:
      type: object
      properties:
        token:
          type: string
      required:
        - token

    Owner:
      $ref: './domain.yml#/components/schemas/Owner'

    TweetsResponse:
      type: object
      properties:
        user_id:
          type: string
        cursor:
          type: string
        tweets:
          type: array
          items:
            $ref: './domain.yml#/components/schemas/Tweet'
      required:
        - cursor
        - tweets
        - user_id

    RepliesTreeResponse:
      type: object
      properties:
        user_id:
          type: string
        cursor:
          type: string
        replies:
          type: array
          items:
            $ref: './domain.yml#/components/schemas/ReplyNode'
      required:
        - cursor
        - replies

    ChatsResponse:
      type: object
      properties:
        user_id:
          type: string
        cursor:
          type: string
        chats:
          type: array
          items:
            $ref: './domain.yml#/components/schemas/Chat'
      required:
        - user_id
        - cursor
        - chats

    ChatMessageResponse:
      $ref: './domain.yml#/components/schemas/ChatMessage'

    ChatMessagesResponse:
      type: object
      properties:
        owner_id:
          type: string
        chat_id:
          type: string
        cursor:
          type: string
        messages:
          type: array
          items:
            $ref: './domain.yml#/components/schemas/ChatMessage'
      required:
        - chat_id
        - owner_id
        - cursor
        - messages

    UsersResponse:
      type: object
      properties:
        cursor:
          type: string
        users:
          type: array
          items:
            $ref: './domain.yml#/components/schemas/User'
      required:
        - cursor
        - users

