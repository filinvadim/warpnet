// Package node provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package node

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	externalRef0 "github.com/filinvadim/warpnet/gen/domain-gen"
	"github.com/getkin/kin-openapi/openapi3"
)

// None defines model for None.
type None = map[string]interface{}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xaTY/bNhD9KwLbU6CNvWmQg25NULQLpM4icJHDYmHQ0thmLZEqSdsxFv7vBUnZ1hct",
	"UpWSHIocYkjk8L03w+FwtC8oZlnOKFApUPSCRLyBDOufM0ZB/S+POaAIseXfEEt0ClHCMkzo4sMGS/U+",
	"5ywHLgnoWTEHLCFZmHcrxjP1CyVYwp0kGaDwbFBITuhaGVxxli12AviCJKUVrwMsjyW7OWuXJ55QTiHi",
	"8M+OcEhQ9KSWrYGrrBmWyVaWew5vqvYnCIHX0CLeBksbm5hRCVRTyQj9CHQtNyi6b5GzjwtsEl7l7VhU",
	"jaQ4gxYzNVVL8hV0Q6P0mWHJWIXMDVU/km2LnPIAIN3hu4y0crmsdQPlZ8jT44wlrZ4nacKBqt9EQqYf",
	"/sxhhSL00+S6RyfFBp00TJ4u62LO8RFppHl6dDQ0V/gb/IyF8ArvJjutwY/vhnk7zAG3TUq2xqaPK3UM",
	"t3hRG1vEbEerwAiV796iUAlFsl2GoullLqES1sDV7BxzoNakwo3PhH/YGV+3Bp0x2RsxZ8yKV8JXOWAY",
	"9UtbJtAUknLOugp9pdAjk/0lgDdjE++xxLwi5pJQzI9tQbnE8XbN2Y4mC5IV54zLNMJaNV8SLjdqF7hv",
	"i15FAEtTdoBksTxWorEZA7WAu0ykKqRawq0ZYsUULrznKAxe6GwZgsVYEkZbX1KWgHUHmM3ljrsc4R2b",
	"4QBLQWp+3vHUrU5S4VOJ9zOLmofq6peVrUZB95aRTNdT4jOInFFhqai8s5uubFt8Ge+4YLyrULqtVWEj",
	"LJDZaBUlYgcza61oB5oVhvtocq5bW6Tx538BYpNAlTYExJwD3FDBzpSb+YNWVP40zyhsLHUxInoR7Hd0",
	"z20Htz+3AoCNmjrK+jFTULyJ6ZOzwcuG3SzRBh326hx/jwX8ti8uXFXgZoCZ16VVaax9rd9B/pqmOpNd",
	"lsRp+mmFoqfb1OtYT+H3SoApyYgsvamdQG6BpbFeJzQVe65pdk6To8jWI7vaVAjR17s1uyue7sxp3Ubf",
	"jXaRGodnPRSzSzmsL5DW24e10q9fQy/1dN1st1Ymwf7IUqlwf0jcbiAPLpR14v2WjIlYnAu30vslYylg",
	"WhlQ1M/NEd4755YGKn8Nz3+AzmZHAV5taPp0QBy7lB2xU6TTb5pNv3/nsUMUXRAOLolTfhw5eZZW6NBg",
	"TjJICR0iMrrHN/N2DYx6M7hDdDH7YA9GjwwdXox1yKoS9eBEBjxOZnD4P5X2SKUzOIyWSntIl12/N/ne",
	"9E+3WY6TGy/fEby+W9zCOWLKGBTnaAnB6w7dBlI9JHSlW8QJiJiT3PQv0eObx0BIDjgjdB3knEkWs1QE",
	"K8YDHCRExeFyJyEJ5gciJfC7lGwhwHmekqIJGiJJZKoW/IJ5HsxAHhjfohDtgQuzyv3r6eupCmaWA8U5",
	"QRH6RT9Sx5rcaKITdaxPzMjoBTGNUJifwPVSKjGiT+aFCvT76RSZ7Q9CvmeJ7j2XPrW+mry6fhbXTqFH",
	"Z6dU0qfz2ddjSrV7oL2lk5ppvWgF3kynw1BrNl27YFaaCiaSqhH0x3z+GBARUCYDsctzxiUkyJCYFMnL",
	"3a1F7hrbs5UE7+ypfrManY7xXdxoQHt4+XJ6eDubssTD0zOWeLu5l26+NHRZ7c5Dn6Jjx2vpqHaOuz5z",
	"6u2p8UO17UOBY7SWmv3esSqLO5G7n8+3KG9XOwlfvaP1E71L6trXCm/J1HQPvdTwUfdF9TbpFuPVcvI/",
	"XGlH3hZ1X4U+dar3blBFprtnVZ05tmOvtbSzX32nNNqt43u1+lHN0ammrPfz6SlEAvhef4h7qtf8D4/7",
	"t8H8w2NghqBQ/51AhGScR5PJ9LX+F72dTu81xJbJX2ApWLwFWTdxEDULk4NoN/LOjuApip6L5Z9P/wYA",
	"AP//OChtx+QqAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "./domain.yml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
