package relay

import (
	"github.com/filinvadim/warpnet/core/warpnet"
	relayv2 "github.com/libp2p/go-libp2p/p2p/protocol/circuitv2/relay"
)

/*
  Библиотека libp2p Relay v2 — это улучшенная версия механизма ретрансляции соединений в libp2p,
предназначенная для случаев, когда узлы не имеют прямого соединения из-за NAT, брандмауэров или других
сетевых ограничений.
  В стандартной P2P-сети узлы должны устанавливать прямое соединение друг с другом, но если один или
оба узла находятся за NAT или Firewall, прямое соединение может быть невозможным. В таких случаях
Relay v2 позволяет передавать трафик через посреднические узлы (relay nodes), обеспечивая связь даже
в ограниченных сетях.
  Основные характеристики libp2p Relay v2:
- Автоматическое обнаружение и использование релеев
- Если узел не может подключиться напрямую, он автоматически находит relay-узел.
- Режимы работы:
- Active relay: Узел может сам выступать релеем для других.
- Passive relay: Узел использует релейные сервисы без предоставления своих ресурсов.
- Hole Punching
- Использует механизмы NAT-traversal (например, DCUtR – Direct Connection Upgrade through Relay) для попытки установить прямое соединение, прежде чем переключаться на relay.
- Более эффективная маршрутизация
- Relay v2 использует маршруты с минимальной задержкой, а не просто передаёт весь трафик через один узел.
- Оптимизация пропускной способности

  Relay v2 нужен, если:
- Узлы не имеют публичного IP-адреса и находятся за NAT.
- Требуется обеспечить соединение между участниками сети, которые не могут соединиться напрямую.
- Важно уменьшить нагрузку на relay-серверы (по сравнению с Relay v1).
- Используется DCUtR, чтобы попытаться обойти NAT перед переходом к relay.
*/

func NewRelay(node warpnet.P2PNode) (*relayv2.Relay, error) {
	relay, err := relayv2.New(
		node,
		relayv2.WithInfiniteLimits(),
	)
	return relay, err
}
